@using BaseEAM.Services.Security
@model TenantLeaseModel
@{
    var defaultGridPageSize = EngineContext.Current.Resolve<BaseEAM.Core.Domain.GeneralSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<BaseEAM.Core.Domain.GeneralSettings>().GridPageSizes;
}
<div id="group-tenantLeases" class="panel-group">
    <div class="panel panel-default">
        <div class="panel-body">
            <div id="tenantLeases-grid"></div>
            <script>
                var gridCheckboxHandler2 = new BaseEam.CheckBoxHandler('tenantLeases-grid');
                gridCheckboxHandler2.init();

                $(document).ready(function () {
                    $("#tenantLeases-grid").kendoGrid({
                        dataSource: {
                            type: "json",
                            transport: {
                                read: {
                                    url: "@Html.Raw(Url.Action("TenantLeaseList", "Tenant"))",
                                    type: "POST",
                                    dataType: "json",
                                    data: additionalData2
                                },
                                //This is used to map field to format that the server can understand
                                //it runs after the data (additionalData) populated
                                parameterMap: function (data, operation) {
                                    sortMapping = [
                                        { from: "Status", to: "Assignment.Name" },
                                        { from: "SiteName", to: "Site.Name" }
                                    ];
                                    BaseEam.Grid.mapSortColumns(data.sort, sortMapping);
                                    return data;
                                }
                            },
                            schema: {
                                data: "Data",
                                total: "Total",
                                errors: "Errors",
                                model: {
                                    id: "Id"
                                }
                            },
                            error: function(e) {
                                display_kendoui_grid_error(e);
                                // Cancel the changes
                                this.cancelChanges();
                            },
                            pageSize: @(defaultGridPageSize),
                            serverPaging: true,
                            serverFiltering: true,
                            serverSorting: true
                        },
                        pageable: {
                            refresh: true,
                            pageSizes: [@(gridPageSizes)],
                            @Html.Partial("_GridPagerMessages")
                        },
                        sortable: true,
                        editable: false,
                        scrollable: false,
                        dataBound: gridCheckboxHandler2.onDataBound,
                        columns: [{
                            field: "Number",
                            title: "@T("Common.Number")"
                        }, {
                            field: "Description",
                            title: "@T("Common.Description")"
                        }, {
                            field: "PriorityText",
                            title: "@T("Common.Priority")",
                            sortable: false
                        }, {
                            field: "Status",
                            title: "@T("Common.Status")"
                        }, {
                            field: "SiteName",
                            title: "@T("Site")"
                        }, {
                            field: "Id",
                            headerTemplate: "",
                            width: 50,
                            template: '<button class="btn btn-primary" href="" onclick="editTenantLease(event, #=Id#);"></span><i class="fa fa-eye aria-hidden="true""></i></button>',
                            sortable: false
                        }]
                    });
                });
            </script>
        </div>
    </div>
</div>

<script type="text/javascript">


     var viewModel;
     function initializeViewModel() {
         viewModel = {
             isTermIsMonthToMonth: ko.observable($('#TermIsMonthToMonth').is(":checked")),
             //7: BiMonthly
             isBiMonthly: ko.observable($('#DueFrequency').val() === '7' ? true : false),
         };
         ko.applyBindings(viewModel);
     };

     function editTenantLease(e, id) {
         e.preventDefault();
         if ($('#panel-tenantLease').is(":visible")) {
             togglePanelTenantLease(false);
         }
         var postData = {
             id: id
         };
         addAntiForgeryToken(postData);

         $.ajax({
             cache: false,
             type: "POST",
             url: "@(Url.Action("TenantLease", "Tenant"))",
             data: postData,
             success: function (data) {
                 //append html
                 $("#group-tenantLeases").append(data.Html);

                 //apply binding for the newly generated element
                 ko.applyBindings(viewModel, $("#panel-tenantLease")[0]);
                 viewModel.isTermIsMonthToMonth(data.IsTermIsMonthToMonth);
                 if (data.IsBiMonthly == '7') {
                     viewModel.isBiMonthly(true);
                 } else {
                     viewModel.isBiMonthly(false);
                 }
                 console.log(data);
                 //then toggle the panel
                 togglePanelTenantLease(true);
             },
             error: function (xhr, ajaxOptions, thrownError) {
                 showBSModal({ title: 'ERROR', body: thrownError });
             },
             traditional: true
         });
     };

     function additionalData2() {
         var data = {
             tenantId: $("#Id").val()
         };
         addAntiForgeryToken(data);
         return data;
     }

     function togglePanelTenantLease(editmode) {
         if (editmode) {
             $('#panel-tenantLease').show();
         }
         else {
             $('#panel-tenantLease').remove();
         }
     }

     $(document).ready(function () {
         //initialize view model
         initializeViewModel();
     });
</script>