@using BaseEAM.Services.Security
@model TenantLeaseChargeModel
@{
    var permissionService = EngineContext.Current.Resolve<BaseEAM.Services.IPermissionService>();
    var allowCreate = permissionService.Authorize(StandardPermissionName.Property_TenantLease_Create);
    var allowRead = permissionService.Authorize(StandardPermissionName.Property_TenantLease_Read);
    var allowUpdate = permissionService.Authorize(StandardPermissionName.Property_TenantLease_Update);
    var allowDelete = permissionService.Authorize(StandardPermissionName.Property_TenantLease_Delete);

    var primarySystemCurrencySymbol = EngineContext.Current.Resolve<BaseEAM.Core.IWorkContext>().WorkingCurrency.CurrencySymbol;
}

<div id="panel-tenantLeaseCharge" class="panel panel-default eam-panel">
    <div class="panel-heading">
        <button type="button" id="saveTenantLeaseChargeDetail" class="btn btn-primary@(allowCreate || allowUpdate ? "" : " none-display")" title="@T("Common.Save")">
            <i class="fa fa-floppy-o"></i>
        </button>
        <button type="button" id="cancelTenantLeaseChargeDetail" class="btn btn-primary" title="@T("Common.Cancel")">
            <i class="fa fa-ban"></i>
        </button>
    </div>
    <div class="panel-body">
        @Html.Hidden("TenantLeaseId", Model.TenantLeaseId)
        @Html.Hidden("TenantLeaseChargeId", Model.Id)
        <div id="tenantLeaseCharge-error" class="validation-summary-errors none-display">
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <div class="col-md-3">
                    @Html.BaseEamLabelFor(model => model.ChargeTypeId, required: true)
                </div>
                <div class="col-md-9">
                    @Html.BaseEamComboBoxFor(model => model.ChargeTypeId, "ValueItems", "Common",
                                            new RouteValueDictionary { { "additionalField", "category" }, { "additionalValue", "Charge Type" } }, true)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    @Html.BaseEamLabelFor(model => model.ChargeAmount, required: true)
                </div>
                <div class="col-md-9">
                    @Html.BaseEamEditorFor(model => model.ChargeAmount, postfix: primarySystemCurrencySymbol)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    @Html.BaseEamLabelFor(model => model.AmountIsOverridable)
                </div>
                <div class="col-md-9">
                    <div class="form-text-row" id="uom">
                        @Html.BaseEamCheckBoxFor(model => model.AmountIsOverridable)
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <div class="col-md-3">
                    @Html.BaseEamLabelFor(model => model.ChargeDueType, required: true)
                </div>
                <div class="col-md-9">
                    @Html.EnumDropDownListFor(model => model.ChargeDueType, new { @class = "form-control" })
                </div>
            </div>
            <!--3: OnceOnlyOnaSpecificDate-->
            <div class="form-group" data-bind="visible: chargeDueType() == '3'">
                <div class="col-md-3">
                    @Html.BaseEamLabelFor(model => model.ChargeDueDate, required: true)
                </div>
                <div class="col-md-9">
                    @Html.BaseEamEditorFor(model => model.ChargeDueDate)
                </div>
            </div>
            <!--4: MonthlyOnaSpecificDay -->
            <div class="form-group" data-bind="visible: chargeDueType() == '4'">
                <div class="col-md-3">
                    @Html.BaseEamLabelFor(model => model.ChargeDueDay, required: true)
                </div>
                <div class="col-md-9">
                    @Html.BaseEamDropDownListFor(model => model.ChargeDueDay, Model.AvailableChargeDueDays)
                </div>
            </div>
            <!--0: EachTimeRentIsDue-->
            <div class="form-group" data-bind="visible: chargeDueType() == '0' || chargeDueType() == '4'">
                <div class="col-md-3">
                    @Html.BaseEamLabelFor(model => model.ValidFrom, required: true)
                </div>
                <div class="col-md-9">
                    @Html.BaseEamEditorFor(model => model.ValidFrom)
                </div>
            </div>
            <!--0: EachTimeRentIsDue-->
            <div class="form-group" data-bind="visible: chargeDueType() == '0' || chargeDueType() == '4'">
                <div class="col-md-3">
                    @Html.BaseEamLabelFor(model => model.ValidTo, required: true)
                </div>
                <div class="col-md-9">
                    @Html.BaseEamEditorFor(model => model.ValidTo)
                </div>
            </div>
        </div>
    </div>
    <script type="text/javascript">

        $("#saveTenantLeaseChargeDetail").click(function (e) {
            e.preventDefault();
            var $group = $("#panel-tenantLeaseCharge :input");
            var postData = $group.serializeJSON({ checkboxUncheckedValue: "false" });
            //change Id property name so it can map to MVC model
            postData.Id = postData.TenantLeaseChargeId;
            addAntiForgeryToken(postData);

            $.ajax({
                cache: false,
                type: "POST",
                url: "@(Url.Action("SaveTenantLeaseCharge", "TenantLease"))",
                data: postData,
                success: function (data) {
                    if (data && data.Errors) {
                        showErrors(data.Errors, '#tenantLeaseCharge-error');
                    } else {
                        //then toggle the panel
                        togglePanelTenantLeaseCharge(false);

                        //refresh grid
                        var grid = $('#tenantLeaseCharges-grid').data('kendoGrid');
                        grid.dataSource.page(1);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    showBSModal({ title: 'ERROR', body: thrownError });
                },
                traditional: true
            });
        });

        $("#cancelTenantLeaseChargeDetail").click(function (e) {
            e.preventDefault();
            var postData = {
                id: $("#TenantLeaseChargeId").val()
            };
            addAntiForgeryToken(postData);

            $.ajax({
                cache: false,
                type: "POST",
                url: "@(Url.Action("CancelTenantLeaseCharge", "TenantLease"))",
                data: postData,
                success: function (data) {
                    //toggle the panel
                    togglePanelTenantLeaseCharge(false);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    showBSModal({ title: 'ERROR', body: thrownError });
                },
                traditional: true
            });
        });

        $(document).ready(function () {
            $("#@Html.FieldIdFor(model => model.ChargeDueType)").change(function () {
                var chargeDueType = $("#@Html.FieldIdFor(model => model.ChargeDueType)").val();
                viewModel.chargeDueType(chargeDueType);
            });
        });

    </script>
</div>
